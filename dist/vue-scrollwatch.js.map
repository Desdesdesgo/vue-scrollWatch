{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap f0055ff98db97c840283","webpack:///vue-scrollwatch.js","webpack:///./src/lib/vue-scrollwatch.js","webpack:///./node_modules/bezier-easing/src/index.js"],"names":["root","factory","exports","module","define","amd","self","this","__webpack_require__","moduleId","installedModules","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","value","__WEBPACK_IMPORTED_MODULE_0_bezier_easing__","__WEBPACK_IMPORTED_MODULE_0_bezier_easing___default","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","length","err","Array","isArray","TypeError","getOT","element","yPosition","nextElement","offsetTop","offsetParent","cubicBezierArray","blockWatch","blockWatching","currentNode","nodeList","nodeTops","scrollAnimationFrame","scrollDom","document","scrollingElement","scrollTimer","scrollTimerDelay","_db","_name","scrollDone","Event","handleScroll","scroll","clearTimeout","setTimeout","get_current_node_and_tops","new_current_node","tops","dealResult","el","top","dispatchEvent","get_common_offset","first_node","keys","sort","scrollDomOT","try_update_node_tops","map","v","Number","a","b","last","threshold","Math","ceil","scrollTop","offset","find_current","node","force","nodeOT","first","mid","floor","startNode","endNode","start","indexOf","end","step","callback","jumpTo","target_node","moveTo","scrollTo","Promise","resolve","reject","startingY","difference","easing","bezierEasing","timestamp","progress","progressPercentage","perTick","window","requestAnimationFrame","updateNodeList","binding","vnode","fn","addEventListener","attributes","current_name","setBlockWatchOnJump","setContainer","css_selector","querySelector","setScrollTimerDelay","delay","vueScrollwatch","install","Vue","directive","bind","db","inserted","unbind","removeEventListener","cancelAnimationFrame","update","A","aA1","aA2","B","C","calcBezier","aT","getSlope","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","abs","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","newtonRaphsonIterate","aGuessT","NEWTON_ITERATIONS","currentSlope","LinearEasing","x","kSplineTableSize","kSampleStepSize","float32ArraySupported","Float32Array","mY1","mY2","getTForX","intervalStart","currentSample","lastSample","sampleValues","dist","guessForT","initialSlope","Error"],"mappings":"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","file":"vue-scrollwatch.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vue-scrollwatch\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-scrollwatch\"] = factory();\n\telse\n\t\troot[\"vue-scrollwatch\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f0055ff98db97c840283","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"vue-scrollwatch\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"vue-scrollwatch\"] = factory();\n\telse\n\t\troot[\"vue-scrollwatch\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_bezier_easing__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_bezier_easing___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_bezier_easing__);\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n//   Scroll monitor component\n\n\n\nvar getOT = function getOT(element) {\n  var yPosition = 0;\n  var nextElement = element;\n\n  while (nextElement) {\n    yPosition += nextElement.offsetTop;\n    nextElement = nextElement.offsetParent;\n  }\n  return yPosition;\n};\n\nvar cubicBezierArray = [0.5, 0, 0.35, 1];\nvar blockWatch = false;\nvar blockWatching = false;\nvar currentNode = {};\nvar duration = 600;\nvar nodeList = {};\nvar nodeTops = {};\nvar scrollAnimationFrame = null;\nvar scrollDom = document.scrollingElement;\nvar scrollTimer = null;\nvar scrollTimerDelay = 150;\nvar _db = function _db() {};\nvar _name = 'vueScrollwatch';\n\nvar scrollDone = new Event('scroll_watch_done');\n\nvar handleScroll = function handleScroll(scroll) {\n  if (scrollTimer != null) {\n    clearTimeout(scrollTimer);\n  }\n  scrollTimer = setTimeout(function () {\n    var _get_current_node_and = get_current_node_and_tops(),\n        _get_current_node_and2 = _slicedToArray(_get_current_node_and, 2),\n        new_current_node = _get_current_node_and2[0],\n        tops = _get_current_node_and2[1];\n\n    if (blockWatch) {\n      blockWatch = false;\n    } else {\n      dealResult(currentNode, new_current_node, tops);\n    }\n    currentNode.el = new_current_node.el;\n    currentNode.name = new_current_node.name;\n    currentNode.top = new_current_node.top;\n    _db(10, function () {\n      return [_name, '#handleScroll', new_current_node.name, new_current_node.top];\n    });\n    scrollDom.dispatchEvent(scrollDone);\n  }, scrollTimerDelay);\n};\n\nvar get_common_offset = function get_common_offset() {\n  var first_node = nodeList[Object.keys(nodeList).sort()[0]];\n  if (!first_node) return 0;\n  return first_node.top - scrollDomOT();\n};\n\nvar get_current_node_and_tops = function get_current_node_and_tops() {\n  var first_node = nodeList[Object.keys(nodeList).sort()[0]];\n  try_update_node_tops(first_node, Object.keys(nodeList).length != Object.keys(nodeTops).length);\n  var tops = Object.keys(nodeTops).map(function (v) {\n    return Number(v);\n  }).sort(function (a, b) {\n    return a - b;\n  });\n  var last = tops.length - 1;\n  if (last <= 0) return;\n\n  // We assume that all nodes have the sam #offset.\n  // Otherwise we have to use #offset in #find_current\n  var threshold = Math.ceil(scrollDom.scrollTop + first_node.top + first_node.offset);\n  _db(10, function () {\n    return [_name, '#get_current_node_and_tops', scrollDom.scrollTop, first_node.top, first_node.offset, threshold];\n  });\n  return [find_current(tops, threshold, 0, last), tops];\n};\n\nvar try_update_node_tops = function try_update_node_tops(node, force) {\n  if (force == false || getOT(node.el) == node.top) return;\n  _db(10, function () {\n    return [_name, '#try_update_node_tops', force || getOT(node.el) - node.top];\n  });\n  nodeTops = {};\n  for (var name in nodeList) {\n    var _node = nodeList[name];\n    var nodeOT = getOT(_node.el);\n    if (nodeOT != _node.top) _node.top = nodeOT;\n    nodeTops[_node.top] = _node.name;\n  }\n};\n\nvar find_current = function find_current(tops, threshold, first, last) {\n  _db(10, function () {\n    return [_name, '#find_current', tops[first], tops[last], threshold, first, last];\n  });\n  if (first == last) return nodeList[nodeTops[tops[first]]];\n  var mid = Math.floor((first + last) / 2);\n  if (tops[mid] <= threshold && tops[mid + 1] > threshold) {\n    _db(10, function () {\n      return [_name, '#find_current', tops[mid], mid];\n    });\n    return nodeList[nodeTops[tops[mid]]];\n  }\n  if (tops[mid] <= threshold) {\n    return find_current(tops, threshold, mid + 1, last);\n  } else {\n    return find_current(tops, threshold, first, mid - 1);\n  }\n};\n\nvar dealResult = function dealResult(startNode, endNode, tops) {\n  var start = tops.indexOf(startNode.top);\n  var end = tops.indexOf(endNode.top);\n  if (start == end) return;\n  var step = start < end ? 1 : -1;\n  start += step;\n  for (; step > 0 ? start <= end : start >= end; start += step) {\n    var node = nodeList[nodeTops[tops[start]]];\n    if (node && node.callback) node.callback(node);\n  }\n};\n\nvar jumpTo = function jumpTo(name) {\n  if (blockWatching) blockWatch = true;\n  var target_node = nodeList[name];\n  if (!target_node) return;\n  try_update_node_tops(target_node);\n  moveTo(target_node.top - target_node.offset - scrollDomOT() - get_common_offset());\n  currentNode.el = target_node.el;\n  currentNode.name = target_node.name;\n  currentNode.top = target_node.top;\n};\n\nvar scrollDomOT = function scrollDomOT() {\n  return getOT(scrollDom);\n};\n\nvar scrollTo = function scrollTo(name) {\n  var promise = new Promise(function (resolve, reject) {\n    if (blockWatching) blockWatch = true;\n    var target_node = nodeList[name];\n    if (!target_node) {\n      reject(name);\n    }\n    var startingY = scrollDom.scrollTop;\n    var difference = target_node.top - target_node.offset - get_common_offset() - scrollDomOT() - startingY;\n    try_update_node_tops(target_node);\n    var easing = __WEBPACK_IMPORTED_MODULE_0_bezier_easing___default.a.apply(undefined, cubicBezierArray);\n    var start = null;\n    var step = function step(timestamp) {\n      if (!start) start = timestamp;\n      var progress = timestamp - start >= duration ? duration : timestamp - start;\n      var progressPercentage = progress / duration;\n      var perTick = startingY + easing(progressPercentage) * difference;\n\n      moveTo(perTick);\n\n      if (progress < duration) {\n        scrollAnimationFrame = window.requestAnimationFrame(step);\n      } else {\n        //jumpTo(name)\n        resolve(target_node);\n      }\n    };\n    window.requestAnimationFrame(step);\n  });\n  return promise;\n};\n\nvar moveTo = function moveTo(scrollTop) {\n  _db(10, function () {\n    return [_name, '#moveTo', scrollTop];\n  });\n  scrollDom.scrollTop = scrollTop;\n};\n\nvar updateNodeList = function updateNodeList(el, binding, vnode, fn) {\n  if (Object.keys(nodeList).length == 0) {\n    scrollDom.addEventListener('scroll', handleScroll);\n  }\n\n  var _binding$value = binding.value,\n      name = _binding$value.name,\n      _binding$value$offset = _binding$value.offset,\n      offset = _binding$value$offset === undefined ? 0 : _binding$value$offset,\n      callback = _binding$value.callback;\n\n  var top = getOT(el);\n  el.attributes.name = name;\n\n  if (!currentNode.name) {\n    currentNode.el = el;\n    currentNode.name = name;\n    currentNode.top = top;\n    currentNode.offset = offset;\n  }\n\n  if (currentNode.name) {\n    var current_name = get_current_node_and_tops();\n    current_name = current_name && current_name[0].name;\n    _db(10, function () {\n      return [_name, '#updateNodeList', current_name, currentNode.name];\n    });\n    if (currentNode.name != current_name) jumpTo(currentNode.name);\n  }\n\n  if (name in nodeList) {\n    delete nodeTops[nodeList[name].top];\n  }\n  nodeList[name] = { name: name, offset: offset, top: top, el: el, callback: callback };\n  nodeTops[top] = name;\n  _db(10, function () {\n    return [_name, '#updateNodeList', name, offset, top, getOT(el)];\n  });\n};\n\nvar setBlockWatchOnJump = function setBlockWatchOnJump(value) {\n  blockWatching = !!value;\n};\n\nvar setContainer = function setContainer(css_selector) {\n  scrollDom = document.querySelector(css_selector);\n  if (!scrollDom) {\n    throw '[vue-scrollwatch] Element \\'' + css_selector + '\\' was not found.';\n  }\n};\n\nvar setScrollTimerDelay = function setScrollTimerDelay(delay) {\n  scrollTimerDelay = delay;\n};\n\nvar vueScrollwatch = {};\n\nvueScrollwatch.install = function (Vue) {\n  Vue.directive('scrollWatch', {\n    bind: function bind(el, binding, vnode) {\n      if (typeof binding.value.db == 'function') _db = binding.value.db;\n    },\n\n    inserted: function inserted(el, binding, vnode) {\n      updateNodeList(el, binding, vnode, 'inserted');\n    },\n\n    unbind: function unbind(el, binding, vnode) {\n      _db(10, function () {\n        return [_name, '#install:unbind', binding.value.name, nodeList[binding.value.name].top];\n      });\n      delete nodeTops[nodeList[binding.value.name].top];\n      delete nodeList[binding.value.name];\n      if (Object.keys(nodeList).length == 0 && scrollDom) {\n        scrollDom.removeEventListener('scroll', handleScroll);\n        scrollDom = document.scrollingElement;\n      }\n\n      // If it is animating, stop\n      cancelAnimationFrame(scrollAnimationFrame);\n    },\n\n    update: function update(el, binding, vnode) {\n      updateNodeList(el, binding, vnode, 'update');\n    }\n  });\n};\n\nvueScrollwatch.currentNode = currentNode;\nvueScrollwatch.jumpTo = jumpTo;\nvueScrollwatch.scrollTo = scrollTo;\nvueScrollwatch.setBlockWatchOnJump = setBlockWatchOnJump;\nvueScrollwatch.setContainer = setContainer;\nvueScrollwatch.setScrollTimerDelay = setScrollTimerDelay;\n\nvueScrollwatch.nodeList = nodeList;\nvueScrollwatch.nodeTops = nodeTops;\nvueScrollwatch.moveTo = moveTo;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (vueScrollwatch);\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n/**\n * https://github.com/gre/bezier-easing\n * BezierEasing - use bezier curve for transition easing function\n * by Gaëtan Renaudeau 2014 - 2015 – MIT License\n */\n\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\nvar NEWTON_ITERATIONS = 4;\nvar NEWTON_MIN_SLOPE = 0.001;\nvar SUBDIVISION_PRECISION = 0.0000001;\nvar SUBDIVISION_MAX_ITERATIONS = 10;\n\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\nvar float32ArraySupported = typeof Float32Array === 'function';\n\nfunction A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\nfunction B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\nfunction C (aA1)      { return 3.0 * aA1; }\n\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nfunction calcBezier (aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT; }\n\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\nfunction getSlope (aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1); }\n\nfunction binarySubdivide (aX, aA, aB, mX1, mX2) {\n  var currentX, currentT, i = 0;\n  do {\n    currentT = aA + (aB - aA) / 2.0;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n    if (currentX > 0.0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n  return currentT;\n}\n\nfunction newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\n for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n   var currentSlope = getSlope(aGuessT, mX1, mX2);\n   if (currentSlope === 0.0) {\n     return aGuessT;\n   }\n   var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n   aGuessT -= currentX / currentSlope;\n }\n return aGuessT;\n}\n\nfunction LinearEasing (x) {\n  return x;\n}\n\nmodule.exports = function bezier (mX1, mY1, mX2, mY2) {\n  if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {\n    throw new Error('bezier x values must be in [0, 1] range');\n  }\n\n  if (mX1 === mY1 && mX2 === mY2) {\n    return LinearEasing;\n  }\n\n  // Precompute samples table\n  var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n  for (var i = 0; i < kSplineTableSize; ++i) {\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n  }\n\n  function getTForX (aX) {\n    var intervalStart = 0.0;\n    var currentSample = 1;\n    var lastSample = kSplineTableSize - 1;\n\n    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n      intervalStart += kSampleStepSize;\n    }\n    --currentSample;\n\n    // Interpolate to provide an initial guess for t\n    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    var guessForT = intervalStart + dist * kSampleStepSize;\n\n    var initialSlope = getSlope(guessForT, mX1, mX2);\n    if (initialSlope >= NEWTON_MIN_SLOPE) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n    }\n  }\n\n  return function BezierEasing (x) {\n    // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n    if (x === 0) {\n      return 0;\n    }\n    if (x === 1) {\n      return 1;\n    }\n    return calcBezier(getTForX(x), mY1, mY2);\n  };\n};\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// vue-scrollwatch.js","//   Scroll monitor component\n\nimport bezierEasing from 'bezier-easing'\n\nconst getOT = function (element) {\n    let yPosition = 0\n    let nextElement = element\n\n    while (nextElement) {\n      yPosition += (nextElement.offsetTop)\n      nextElement = nextElement.offsetParent\n    }\n    return yPosition\n}\n\nlet cubicBezierArray = [0.5, 0, 0.35, 1]\nlet blockWatch = false\nlet blockWatching = false\nlet currentNode = {}\nlet duration = 600\nlet nodeList = {}\nlet nodeTops = {}\nlet scrollAnimationFrame = null\nlet scrollDom = document.scrollingElement\nlet scrollTimer = null\nlet scrollTimerDelay = 150\nlet _db = function() {}\nlet _name ='vueScrollwatch'\n\nconst scrollDone = new Event('scroll_watch_done')\n\nconst handleScroll = function (scroll) {\n  if (scrollTimer != null) {\n    clearTimeout(scrollTimer)\n  }\n  scrollTimer = setTimeout(function() {\n    let [new_current_node, tops] = get_current_node_and_tops()\n    if (blockWatch) {\n      blockWatch = false\n    } else {\n      dealResult(currentNode, new_current_node, tops)\n    }\n    currentNode.el = new_current_node.el\n    currentNode.name = new_current_node.name\n    currentNode.top = new_current_node.top\n      _db(10, () => [_name, '#handleScroll', new_current_node.name, new_current_node.top])\n    scrollDom.dispatchEvent(scrollDone)\n  }, scrollTimerDelay)\n}\n\nconst get_common_offset = function() {\n  let first_node = nodeList[Object.keys(nodeList).sort()[0]]\n  if (! first_node) return 0\n  return first_node.top - scrollDomOT()\n}\n\nconst get_current_node_and_tops = function() {\n  let first_node = nodeList[Object.keys(nodeList).sort()[0]]\n  try_update_node_tops(first_node,\n                       Object.keys(nodeList).length != Object.keys(nodeTops).length)\n  let tops = Object.keys(nodeTops).map(v => Number(v)).sort((a, b) => a - b)\n  let last = tops.length - 1\n  if (last <= 0) return\n\n  // We assume that all nodes have the sam #offset.\n  // Otherwise we have to use #offset in #find_current\n  let threshold = Math.ceil(scrollDom.scrollTop + first_node.top + first_node.offset)\n    _db(10, () => [_name, '#get_current_node_and_tops', scrollDom.scrollTop, first_node.top, first_node.offset, threshold])\n  return [\n    find_current(tops, threshold, 0, last),\n    tops\n  ]\n}\n\nconst try_update_node_tops = function(node, force) {\n  if (force == false || getOT(node.el) == node.top) return\n    _db(10, () => [_name, '#try_update_node_tops', force || getOT(node.el) - node.top])\n  nodeTops = {}\n  for (let name in nodeList) {\n    let node = nodeList[name]\n    let nodeOT = getOT(node.el)\n    if (nodeOT != node.top) node.top = nodeOT\n    nodeTops[node.top] = node.name\n  }\n}\n\nconst find_current = function(tops, threshold, first, last) {\n    _db(10, () => [_name, '#find_current', tops[first], tops[last], threshold, first, last])\n  if (first == last) return nodeList[nodeTops[tops[first]]]\n  let mid = Math.floor((first + last) / 2)\n  if (tops[mid] <= threshold && tops[mid + 1] > threshold) {\n      _db(10, () => [_name, '#find_current', tops[mid], mid])\n    return nodeList[nodeTops[tops[mid]]]\n  }\n  if (tops[mid] <= threshold) {\n    return find_current(tops, threshold, mid + 1, last)\n  } else {\n    return find_current(tops, threshold, first, mid - 1)\n  }\n}\n\nconst dealResult = function (startNode, endNode, tops) {\n  let start = tops.indexOf(startNode.top)\n  let end = tops.indexOf(endNode.top)\n  if (start == end) return\n  let step = start < end ? 1 : -1\n  start += step\n  for (; step > 0 ? start <= end : start >= end; start += step) {\n    let node = nodeList[nodeTops[tops[start]]]\n    if (node && node.callback)\n        node.callback(node)\n  }\n}\n\nconst jumpTo = function (name) {\n  if (blockWatching) blockWatch = true\n  let target_node = nodeList[name]\n  if (!target_node) return\n  try_update_node_tops(target_node)\n  moveTo(target_node.top - target_node.offset - scrollDomOT() - get_common_offset())\n  currentNode.el = target_node.el\n  currentNode.name = target_node.name\n  currentNode.top = target_node.top\n}\n\nconst scrollDomOT = function() {\n  return getOT(scrollDom)\n}\n\nconst scrollTo = function (name) {\n  let promise = new Promise(function (resolve, reject) {\n    if (blockWatching) blockWatch = true\n    let target_node = nodeList[name]\n    if (!target_node) {reject(name)}\n    const startingY = scrollDom.scrollTop\n    const difference = target_node.top - target_node.offset - get_common_offset()\n                - scrollDomOT() - startingY\n    try_update_node_tops(target_node)\n    const easing = bezierEasing(...cubicBezierArray)\n    let start = null\n    const step = (timestamp) => {\n        if (!start) start = timestamp\n        let progress = timestamp - start >= duration ? duration\n                                                     : (timestamp - start)\n        let progressPercentage = progress / duration\n        const perTick = startingY + (easing(progressPercentage) * difference)\n\n        moveTo(perTick)\n\n        if (progress < duration) {\n          scrollAnimationFrame = window.requestAnimationFrame(step)\n        } else {\n          //jumpTo(name)\n          resolve(target_node)\n        }\n    }\n    window.requestAnimationFrame(step)\n  })\n  return promise\n}\n\nconst moveTo = function(scrollTop){\n    _db(10, () => [_name, '#moveTo', scrollTop])\n  scrollDom.scrollTop = scrollTop\n}\n\nconst updateNodeList = function(el, binding, vnode, fn) {\n  if (Object.keys(nodeList).length == 0) {\n      scrollDom.addEventListener('scroll', handleScroll)\n  }\n\n  let { name, offset=0, callback } = binding.value\n  let top = getOT(el)\n  el.attributes.name = name\n\n  if (!currentNode.name) {\n    currentNode.el = el\n    currentNode.name = name\n    currentNode.top = top\n    currentNode.offset = offset\n  }\n\n  if (currentNode.name) {\n    let current_name = get_current_node_and_tops()\n    current_name = current_name && current_name[0].name\n      _db(10, () => [_name, '#updateNodeList', current_name, currentNode.name])\n    if (currentNode.name != current_name) jumpTo(currentNode.name)\n  }\n\n  if (name in nodeList) {\n    delete nodeTops[nodeList[name].top]\n  }\n  nodeList[name] = { name, offset, top, el, callback }\n  nodeTops[top] = name\n    _db(10, () => [_name, '#updateNodeList', name, offset, top, getOT(el)])\n}\n\nconst setBlockWatchOnJump = function(value) {\n  blockWatching = !!value\n}\n\nconst setContainer = function (css_selector) {\n  scrollDom = document.querySelector(css_selector)\n  if(!scrollDom){\n    throw `[vue-scrollwatch] Element '${css_selector}' was not found.`\n  }\n}\n\nconst setScrollTimerDelay = function(delay){\n  scrollTimerDelay = delay\n}\n\nlet vueScrollwatch={}\n\nvueScrollwatch.install = function (Vue) {\n  Vue.directive('scrollWatch', {\n    bind: function (el, binding, vnode) {\n      if (typeof binding.value.db =='function') _db = binding.value.db\n    },\n\n    inserted: function (el, binding, vnode) {\n      updateNodeList(el, binding, vnode, 'inserted')\n    },\n\n    unbind: function (el, binding, vnode) {\n        _db(10, () => [_name, '#install:unbind', binding.value.name, nodeList[binding.value.name].top])\n      delete nodeTops[nodeList[binding.value.name].top]\n      delete nodeList[binding.value.name]\n      if (Object.keys(nodeList).length == 0 && scrollDom) {\n          scrollDom.removeEventListener('scroll', handleScroll)\n          scrollDom = document.scrollingElement\n      }\n\n      // If it is animating, stop\n      cancelAnimationFrame(scrollAnimationFrame)\n    },\n\n    update: function (el, binding, vnode) {\n      updateNodeList(el, binding, vnode, 'update')\n    },\n  })\n}\n\nvueScrollwatch.currentNode = currentNode\nvueScrollwatch.jumpTo = jumpTo\nvueScrollwatch.scrollTo = scrollTo\nvueScrollwatch.setBlockWatchOnJump = setBlockWatchOnJump\nvueScrollwatch.setContainer = setContainer\nvueScrollwatch.setScrollTimerDelay = setScrollTimerDelay\n\nvueScrollwatch.nodeList = nodeList\nvueScrollwatch.nodeTops = nodeTops\nvueScrollwatch.moveTo = moveTo\n\nexport default vueScrollwatch\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/vue-scrollwatch.js","/**\n * https://github.com/gre/bezier-easing\n * BezierEasing - use bezier curve for transition easing function\n * by Gaëtan Renaudeau 2014 - 2015 – MIT License\n */\n\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\nvar NEWTON_ITERATIONS = 4;\nvar NEWTON_MIN_SLOPE = 0.001;\nvar SUBDIVISION_PRECISION = 0.0000001;\nvar SUBDIVISION_MAX_ITERATIONS = 10;\n\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\nvar float32ArraySupported = typeof Float32Array === 'function';\n\nfunction A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\nfunction B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\nfunction C (aA1)      { return 3.0 * aA1; }\n\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nfunction calcBezier (aT, aA1, aA2) { return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT; }\n\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\nfunction getSlope (aT, aA1, aA2) { return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1); }\n\nfunction binarySubdivide (aX, aA, aB, mX1, mX2) {\n  var currentX, currentT, i = 0;\n  do {\n    currentT = aA + (aB - aA) / 2.0;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n    if (currentX > 0.0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n  return currentT;\n}\n\nfunction newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\n for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n   var currentSlope = getSlope(aGuessT, mX1, mX2);\n   if (currentSlope === 0.0) {\n     return aGuessT;\n   }\n   var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n   aGuessT -= currentX / currentSlope;\n }\n return aGuessT;\n}\n\nfunction LinearEasing (x) {\n  return x;\n}\n\nmodule.exports = function bezier (mX1, mY1, mX2, mY2) {\n  if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {\n    throw new Error('bezier x values must be in [0, 1] range');\n  }\n\n  if (mX1 === mY1 && mX2 === mY2) {\n    return LinearEasing;\n  }\n\n  // Precompute samples table\n  var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n  for (var i = 0; i < kSplineTableSize; ++i) {\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n  }\n\n  function getTForX (aX) {\n    var intervalStart = 0.0;\n    var currentSample = 1;\n    var lastSample = kSplineTableSize - 1;\n\n    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n      intervalStart += kSampleStepSize;\n    }\n    --currentSample;\n\n    // Interpolate to provide an initial guess for t\n    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    var guessForT = intervalStart + dist * kSampleStepSize;\n\n    var initialSlope = getSlope(guessForT, mX1, mX2);\n    if (initialSlope >= NEWTON_MIN_SLOPE) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n    }\n  }\n\n  return function BezierEasing (x) {\n    // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n    if (x === 0) {\n      return 0;\n    }\n    if (x === 1) {\n      return 1;\n    }\n    return calcBezier(getTForX(x), mY1, mY2);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/bezier-easing/src/index.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}